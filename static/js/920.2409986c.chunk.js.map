{"version":3,"file":"static/js/920.2409986c.chunk.js","mappings":"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","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Research/Research.js","components/Resume/Skills/CategoryButton.js","components/Resume/Experience.js","components/Resume/Skills.js","components/Resume/Courses/Course.js","components/Resume/Courses.js","data/resume/courses.js","data/resume/degrees.js","data/resume/positions.js","data/resume/research.js","data/resume/skills.js","pages/Resume.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header style={{ paddingBottom: 20 }}>\n      <div style={{\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: 25,\n      }}\n      >\n        <div style={{ paddingTop: 0, paddingRight: 20 }}>\n          <img src={data.icon} width={30} alt=\"\" />\n        </div>\n        <h4><a href={data.link}>{data.school}</a></h4>\n      </div>\n      {data.degrees.map((degree, i) => <h4 key={degree}>{degree}, {data.years[i]}</h4>)}\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degrees: PropTypes.arrayOf(PropTypes.string).isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    years: PropTypes.arrayOf(PropTypes.number).isRequired,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h2>Education</h2>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.number,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Markdown from 'react-markdown';\n\nconst Job = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <div style={{\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: 20,\n      }}\n      >\n        <div style={{ paddingRight: 20, paddingBottom: 5 }}>\n          <img src={data.icon} width={40} height={40} style={{ borderRadius: '5px' }} alt=\"\" />\n        </div>\n        <h4><a href={data.link}>{data.company}</a> - {data.position}</h4>\n      </div>\n      <p className=\"daterange\"> {data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <Markdown className=\"point\" key={point}>{point}</Markdown>\n      ))}\n    </ul>\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Research = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <div style={{\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: 20,\n      }}\n      >\n        <div style={{ paddingRight: 20, paddingBottom: 5 }}>\n          <img src={data.icon} width={30} alt=\"\" />\n        </div>\n        <h4><a href={data.link}>{data.institution}</a> - {data.position}</h4>\n      </div>\n      <p className=\"daterange\"> {data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nResearch.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    institution: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Research;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CategoryButton = ({ handleClick, active, label }) => (\n  <button\n    className={`skillbutton ${active[label] ? 'skillbutton-active' : ''}`}\n    type=\"button\"\n    onClick={() => handleClick(label)}\n  >\n    {label}\n  </button>\n);\n\nCategoryButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  active: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\n};\n\nexport default CategoryButton;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\nimport Research from './Research/Research';\nimport CategoryButton from './Skills/CategoryButton';\n\nconst ALL_CATEGORIES = 'All';\n\nconst JobExperience = ({ jobs, researches }) => {\n  const [companyTypecategory, setCompanyTypeCategory] = useState(ALL_CATEGORIES);\n  const [technologiesUsedCategory, setTechnologiesUsedCategory] = useState(ALL_CATEGORIES);\n  const [timeFramesCategory, setTimeFramesCategory] = useState(ALL_CATEGORIES);\n  const jobsAndResearch = jobs.concat(researches);\n  const initCompanyTypes = () => (\n    jobsAndResearch.flatMap((job) => job.companyType).sort().reduce((obj, key) => ({\n      ...obj,\n      [key]: false,\n    }), { All: true })\n  );\n  const initTechnologiesUsed = () => (\n    jobsAndResearch.flatMap((job) => job.technologiesUsed).sort().reduce((obj, key) => ({\n      ...obj,\n      [key]: false,\n    }), { All: true })\n  );\n  const initTimeFrames = () => (\n    jobsAndResearch.flatMap((job) => job.timeFrame).sort().reduce((obj, key) => ({\n      ...obj,\n      [key]: false,\n    }), { All: true })\n  );\n\n  const [companyTypes, setCompanyTypes] = useState(initCompanyTypes());\n  const [technologiesUsed, setTechnologiesUsed] = useState(initTechnologiesUsed());\n  const [timeFrames, setTimeFrames] = useState(initTimeFrames());\n\n  const getButtons = (type) => {\n    let buttons;\n    let setButtons;\n    let setCategory;\n    switch (type) {\n      case 'companyTypes':\n        buttons = companyTypes;\n        setButtons = setCompanyTypes;\n        setCategory = setCompanyTypeCategory;\n        break;\n      case 'technologiesUsed':\n        buttons = technologiesUsed;\n        setButtons = setTechnologiesUsed;\n        setCategory = setTechnologiesUsedCategory;\n        break;\n      case 'timeFrames':\n        buttons = timeFrames;\n        setButtons = setTimeFrames;\n        setCategory = setTimeFramesCategory;\n        break;\n      default:\n        buttons = timeFrames;\n        setButtons = setTimeFrames;\n        setCategory = setTimeFramesCategory;\n    }\n    return (\n      Object.keys(buttons).map((key) => (\n        <CategoryButton\n          label={key}\n          key={key}\n          active={buttons}\n          handleClick={(e) => {\n            setCategory(e);\n            setButtons((prev) => (Object.keys(prev).reduce((acc, button) => {\n              acc[button] = button === e;\n              return acc;\n            }, {})));\n          }}\n        />\n      ))\n    );\n  };\n\n  const checkPositionFilter = (position) => (\n    (position.companyType.includes(companyTypecategory) || companyTypecategory === ALL_CATEGORIES)\n    && (position.technologiesUsed.includes(technologiesUsedCategory)\n      || technologiesUsedCategory === ALL_CATEGORIES)\n    && (position.timeFrame.includes(timeFramesCategory) || timeFramesCategory === ALL_CATEGORIES)\n  );\n\n  const getWorkExperience = () => {\n    const filteredJobs = jobs.filter(checkPositionFilter).map((j) => (\n      <Job\n        data={j}\n        key={j.company + j.daterange}\n      />\n    ));\n    if (filteredJobs.length === 0) {\n      return (<p className=\"title\">No relevant work experience for selection</p>);\n    }\n    return filteredJobs;\n  };\n\n  const getResearchExperience = () => {\n    const filteredResearch = researches.filter(checkPositionFilter).map((r) => (\n      <Research\n        data={r}\n        key={r.company + r.daterange}\n      />\n    ));\n    if (filteredResearch.length === 0) {\n      return (<p className=\"title\">No relevant research experience for selection</p>);\n    }\n    return filteredResearch;\n  };\n  return (\n    <div className=\"experience\">\n      <div className=\"link-to\" id=\"experience\" />\n      <div className=\"title\">\n        <h2>Experience</h2>\n        <p>You can filter the experiences to show only the most relevant ones\n          to a particular topic.\n        </p>\n      </div>\n      {/* <div className=\"skill-button-container\">\n        {getButtons('technologiesUsed')}\n      </div> */}\n      <div className=\"company-button-container\">\n        {getButtons('companyTypes')}\n      </div>\n      {/* <div className=\"skill-button-container\">\n        {getButtons('timeFrames')}\n      </div> */}\n      {['All', 'Big Tech', 'Startup'].includes(companyTypecategory) && (\n        <>\n          <div className=\"title\">\n            <h3>Job Experience</h3>\n          </div>\n          {getWorkExperience()}\n        </>\n      )}\n      {['Academia', 'All'].includes(companyTypecategory) && (\n        <>\n          <div className=\"title\">\n            <h3>Research Experience</h3>\n          </div>\n          {getResearchExperience()}\n        </>\n      )}\n    </div>\n  );\n};\n\nJobExperience.propTypes = {\n  jobs: PropTypes.arrayOf(PropTypes.shape({\n    company: PropTypes.string,\n    position: PropTypes.string,\n    link: PropTypes.string,\n    daterange: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n    categories: PropTypes.arrayOf(PropTypes.string),\n  })),\n  researches: PropTypes.arrayOf(PropTypes.shape({\n    company: PropTypes.string,\n    position: PropTypes.string,\n    link: PropTypes.string,\n    daterange: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n    categories: PropTypes.arrayOf(PropTypes.string),\n  })),\n};\n\nJobExperience.defaultProps = {\n  jobs: [],\n  researches: [],\n};\n\nexport default JobExperience;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CategoryButton from './Skills/CategoryButton';\n\nconst handleProps = ({ categories, skills }) => ({\n  buttons: categories.map((cat) => cat.name).reduce((obj, key) => ({\n    ...obj,\n    [key]: false,\n  }), { All: true }),\n  skills,\n});\n\nclass Skills extends Component {\n  constructor(props) {\n    super(props);\n    this.state = handleProps({ categories: props.categories, skills: props.skills });\n  }\n\n  getRows() {\n    // search for true active categories\n    const actCat = Object.keys(this.state.buttons).reduce((cat, key) => (\n      this.state.buttons[key] ? key : cat\n    ), 'All');\n\n    return this.state.skills.sort((a, b) => {\n      let ret = 0;\n      if (a.competency > b.competency) ret = -1;\n      else if (a.competency < b.competency) ret = 1;\n      else if (a.category[0] > b.category[0]) ret = -1;\n      else if (a.category[0] < b.category[0]) ret = 1;\n      else if (a.title > b.title) ret = 1;\n      else if (a.title < b.title) ret = -1;\n      return ret;\n    }).filter((skill) => (actCat === 'All' || skill.category.includes(actCat)))\n      .map((skill) => (\n        <button\n          type=\"button\"\n          key={skill.title}\n        >\n          <a href={skill.url}>\n            {skill.title}\n          </a>\n        </button>\n      ));\n  }\n\n  getButtons() {\n    return Object.keys(this.state.buttons).map((key) => (\n      <CategoryButton\n        label={key}\n        key={key}\n        active={this.state.buttons}\n        handleClick={this.handleChildClick}\n      />\n    ));\n  }\n\n  handleChildClick = (label) => {\n    this.setState((prevState) => {\n      // Toggle button that was clicked. Turn all other buttons off.\n      const buttons = Object.keys(prevState.buttons).reduce((obj, key) => ({\n        ...obj,\n        [key]: (label === key) && !prevState.buttons[key],\n      }), {});\n      // Turn on 'All' button if other buttons are off\n      buttons.All = !Object.keys(prevState.buttons).some((key) => buttons[key]);\n      return { buttons };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"skills\">\n        <div className=\"link-to\" id=\"skills\" />\n        <div className=\"title\">\n          <h2>Skills</h2>\n          <p>You can filter the skills to show only the most relevant ones to a particular topic.\n          </p>\n        </div>\n        <div className=\"skill-button-container\">\n          {this.getButtons()}\n        </div>\n        <div className=\"skill-row-container\">\n          {this.getRows()}\n        </div>\n      </div>\n    );\n  }\n}\n\nSkills.propTypes = {\n  skills: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    competency: PropTypes.number,\n    category: PropTypes.arrayOf(PropTypes.string),\n  })),\n  categories: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    color: PropTypes.string,\n  })),\n};\n\nSkills.defaultProps = {\n  skills: [],\n  categories: [],\n};\n\nexport default Skills;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Course = ({ data, last }) => (\n  <li className=\"course-container\">\n    <a href={data.link} className=\"course\">\n      <h4 className=\"course-number\">{data.number}:</h4>\n      <p className=\"course-name\">{data.title}</p>\n    </a>\n    {!last && <div className=\"course-dot\"><p className=\"course-name\"> &#8226;</p></div>}\n  </li>\n);\n\nCourse.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  last: PropTypes.bool,\n};\n\nCourse.defaultProps = {\n  last: false,\n};\n\nexport default Course;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Course from './Courses/Course';\nimport CategoryButton from './Skills/CategoryButton';\n\nconst ARTIFICIAL_INTELLIGENCE_COURSE_TYPE = 'Artificial Intelligence';\nconst MATHEMATICS_COURSE_TYPE = 'Mathematics';\n\nconst Courses = ({ courses, categoryOrdering }) => {\n  const [courseType, setCourseType] = useState(ARTIFICIAL_INTELLIGENCE_COURSE_TYPE);\n  const initCourseTypes = () => (\n    categoryOrdering.reduce((obj, key) => ({\n      ...obj,\n      [key]: ARTIFICIAL_INTELLIGENCE_COURSE_TYPE === key,\n    }), {})\n  );\n\n  const [courseTypes, setCourseTypes] = useState(initCourseTypes());\n  const getButtons = () => (\n    Object.keys(courseTypes).map((key) => (\n      <CategoryButton\n        label={key}\n        key={key}\n        active={courseTypes}\n        handleClick={(e) => {\n          setCourseType(e);\n          setCourseTypes((prev) => (Object.keys(prev).reduce((acc, button) => {\n            acc[button] = button === e;\n            return acc;\n          }, {})));\n        }}\n      />\n    )));\n  const getRows = () => courses.sort((a, b) => {\n    let ret = 0;\n    const aNumber = a.number.split(' ');\n    const bNumber = b.number.split(' ');\n    let [courseNameA, courseNameB] = [aNumber[0], bNumber[0]];\n    const [courseNumberA, courseNumberB] = [parseInt(aNumber[1], 10), parseInt(bNumber[1], 10)];\n    if (courseType === MATHEMATICS_COURSE_TYPE) {\n      const temp = courseNameA;\n      courseNameA = courseNameB;\n      courseNameB = temp;\n    }\n    if (a.university > b.university) ret = -1;\n    else if (a.university < b.university) ret = 1;\n    else if (courseNameA > courseNameB) ret = 1;\n    else if (courseNameA < courseNameB) ret = -1;\n    else if (courseNumberA < courseNumberB) ret = 1;\n    else if (courseNumberA > courseNumberB) ret = -1;\n    return ret;\n  }).filter((course) => course.category.includes(courseType))\n    .map((course, idx) => (\n      // TODO: Add papers\n      <Course\n        data={course}\n        key={course.title}\n        last={idx === courses.length - 1}\n      />\n    ));\n\n  return (\n    <div className=\"courses\">\n      <div className=\"link-to\" id=\"courses\" />\n      <div className=\"title\">\n        <h2>Selected Courses</h2>\n        <p>Courses are filtered to show only the most relevant ones\n          to a particular topic.\n        </p>\n      </div>\n      <div className=\"courses-button-container\">\n        {getButtons()}\n      </div>\n      <ul className=\"course-list\">\n        {getRows()}\n      </ul>\n    </div>\n  );\n};\n\nCourses.propTypes = {\n  courses: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    number: PropTypes.string,\n    link: PropTypes.string,\n    university: PropTypes.string,\n  })),\n  categoryOrdering: PropTypes.arrayOf(PropTypes.string),\n};\n\nCourses.defaultProps = {\n  courses: [],\n  categoryOrdering: [],\n};\n\nexport default Courses;\n","const courses = [\n  {\n    title: 'Machine Learning',\n    number: 'CS 229',\n    link: 'http://cs229.stanford.edu/',\n    university: 'Stanford',\n    category: ['Artificial Intelligence', 'Mathematics'],\n  },\n  {\n    title: 'Machine Learning with Graphs',\n    number: 'CS 224W',\n    link: 'http://cs224w.stanford.edu/',\n    university: 'Stanford',\n    category: ['Artificial Intelligence', 'Mathematics'],\n  },\n  {\n    title: 'The Modern Financial System',\n    number: 'ECON 44',\n    link: 'https://explorecourses.stanford.edu/search?q=ECON44',\n    university: 'Stanford',\n    category: ['Social Science'],\n  },\n  {\n    title: 'Comparative Democratic Development',\n    number: 'POLISCI 147',\n    link: 'https://explorecourses.stanford.edu/search?q=POLISCI147',\n    university: 'Stanford',\n    category: ['Social Science'],\n  },\n  {\n    title: 'Environmental Science and Technology',\n    number: 'CEE 70',\n    link: 'https://explorecourses.stanford.edu/search?q=CEE70',\n    university: 'Stanford',\n    category: ['Natural Science'],\n  },\n  {\n    title: 'Design and Manufacturing',\n    number: 'ME 203',\n    link: 'https://explorecourses.stanford.edu/search?q=ME203',\n    university: 'Stanford',\n    category: ['Product'],\n  },\n  {\n    title: 'Theories of Consciousness in Early Modern Philosophy',\n    number: 'PHIL 24L',\n    link: 'https://explorecourses.stanford.edu/search?q=PHIL24L',\n    university: 'Stanford',\n    category: ['Social Science'],\n  },\n  {\n    title: 'Deep Multi-Task and Meta-Learning',\n    number: 'CS 330',\n    link: 'http://cs330.stanford.edu/',\n    university: 'Stanford',\n    category: ['Artificial Intelligence'],\n  },\n  {\n    title: 'Cryptocurrencies and Blockchain Technologies',\n    number: 'CS 251',\n    link: 'http://cs251.stanford.edu/',\n    university: 'Stanford',\n    category: ['Computer Systems', 'Mathematics'],\n  },\n  {\n    title: 'Introduction to Computer Graphics and Imaging',\n    number: 'CS 148',\n    link: 'http://cs148.stanford.edu/',\n    university: 'Stanford',\n    category: ['Computer Systems'],\n  },\n  {\n    title: 'Modern Political Thought: Machiavelli to Marx and Mill',\n    number: 'POLISCI 131L',\n    link: 'https://explorecourses.stanford.edu/search?q=POLISCI131L',\n    university: 'Stanford',\n    category: ['Social Science'],\n  },\n  {\n    title: 'Trustworthy Machine Learning',\n    number: 'CS 329T',\n    link: 'https://web.stanford.edu/class/cs329t/',\n    university: 'Stanford',\n    category: ['Artificial Intelligence'],\n  },\n  {\n    title: 'Differential Equations with Linear Algebra, Fourier Methods, and Modern Applications',\n    number: 'MATH 53',\n    link: 'http://web.stanford.edu/class/math53/',\n    university: 'Stanford',\n    category: ['Mathematics'],\n  },\n  {\n    title: 'Linear Algebra and Matrix Theory',\n    number: 'MATH 113',\n    link: 'https://explorecourses.stanford.edu/search?q=MATH113',\n    university: 'Stanford',\n    category: ['Artificial Intelligence', 'Mathematics'],\n  },\n  {\n    title: 'An Intro to Making: What is EE',\n    number: 'ENGR 40M',\n    link: 'https://explorecourses.stanford.edu/search?q=ENGR40M',\n    university: 'Stanford',\n    category: ['Product'],\n  },\n  {\n    title: 'Design for Behavior Change',\n    number: 'CS 247B',\n    link: 'https://explorecourses.stanford.edu/search?q=CS247B',\n    university: 'Stanford',\n    category: ['Product'],\n  },\n  {\n    title: 'Natural Language Processing with Deep Learning',\n    number: 'CS 224N',\n    link: 'http://cs224n.stanford.edu/',\n    university: 'Stanford',\n    category: ['Artificial Intelligence'],\n  },\n  {\n    title: 'International Development (Tutorial)',\n    number: 'OSPOXFRD 196P',\n    link: 'https://explorecourses.stanford.edu/search?q=OSPOXFRD196P',\n    university: 'Oxford',\n    category: ['Social Science'],\n  },\n  {\n    title: 'Philosophy of Language',\n    number: 'OSPOXFRD 32',\n    link: 'https://explorecourses.stanford.edu/search?q=OSPOXFRD32',\n    university: 'Oxford',\n    category: ['Social Science'],\n  },\n  {\n    title: 'Philosophy of Religion (Directed Reading)',\n    number: 'OSPOXFRD 199A',\n    link: 'https://explorecourses.stanford.edu/search?q=OSPOXFRD',\n    university: 'Oxford',\n    category: ['Social Science'],\n  },\n  {\n    title: 'Moral Philosophy',\n    number: 'PHIL 2',\n    link: 'https://explorecourses.stanford.edu/search?q=PHIL2',\n    university: 'Stanford',\n    category: ['Social Science'],\n  },\n  {\n    title: 'Discrete Probabilistic Methods',\n    number: 'MATH 159',\n    link: 'https://explorecourses.stanford.edu/search?q=MATH159',\n    university: 'Stanford',\n    category: ['Artificial Intelligence', 'Mathematics'],\n  },\n  {\n    title: 'Combinatorics',\n    number: 'MATH 108',\n    link: 'https://explorecourses.stanford.edu/search?q=MATH108',\n    university: 'Stanford',\n    category: ['Mathematics'],\n  },\n  {\n    title: 'Principles of Economics',\n    number: 'ECON 1',\n    link: 'https://explorecourses.stanford.edu/search?q=ECON1',\n    university: 'Stanford',\n    category: ['Social Science'],\n  },\n  {\n    title: 'CNNs for Visual Learning',\n    number: 'CS 231N',\n    link: 'https://cs231n.stanford.edu',\n    university: 'Stanford',\n    category: ['Artificial Intelligence'],\n  },\n  {\n    title: 'Graph Theory',\n    number: 'MATH 107',\n    link: 'https://explorecourses.stanford.edu/search?q=MATH107',\n    university: 'Stanford',\n    category: ['Artificial Intelligence', 'Mathematics'],\n  },\n  {\n    title: 'Reinforcement Learning',\n    number: 'CS 234',\n    link: 'https://cs234.stanford.edu',\n    university: 'Stanford',\n    category: ['Artificial Intelligence'],\n  },\n  {\n    title: 'Probabilistic Graphical Models',\n    number: 'CS 228',\n    link: 'https://cs228.stanford.edu',\n    university: 'Stanford',\n    category: ['Artificial Intelligence'],\n  },\n  {\n    title: 'Ethics, Public Policy, and Technological Change',\n    number: 'POLISCI 182W',\n    link: 'https://cs182.stanford.edu',\n    university: 'Stanford',\n    category: ['Social Science'],\n  },\n  {\n    title: 'Modern Algorithmic Toolbox',\n    number: 'CS 168',\n    link: 'https://cs168.stanford.edu',\n    university: 'Stanford',\n    category: ['Artificial Intelligence', 'Computer Systems'],\n  },\n  {\n    title: 'Introduction to Optimizations (Accelerated)',\n    number: 'ENGR 62X',\n    link: 'https://explorecourses.stanford.edu/search?q=ENGR62X',\n    university: 'Stanford',\n    category: ['Artificial Intelligence', 'Computer Systems', 'Mathematics'],\n  },\n  {\n    title: 'Algorithms',\n    number: 'CS 161',\n    link: 'https://cs161.stanford.edu',\n    university: 'Stanford',\n    category: ['Computer Systems', 'Mathematics'],\n  },\n  {\n    title: 'Artificial Intelligence',\n    number: 'CS 221',\n    link: 'https://cs221.stanford.edu',\n    university: 'Stanford',\n    category: ['Artificial Intelligence'],\n  },\n  {\n    title: 'Mathematical Foundation of Computing',\n    number: 'CS 103',\n    link: 'https://cs103.stanford.edu',\n    university: 'Stanford',\n    category: ['Computer Systems', 'Mathematics'],\n  },\n  {\n    title: 'Embodied Interfaces',\n    number: 'ARTSTUDI 162',\n    link: 'https://explorecourses.stanford.edu/search?q=ARTSTUDI162',\n    university: 'Stanford',\n    category: ['Product'],\n  },\n  {\n    title: 'Preventing Human Extinction',\n    number: 'THINK 65',\n    link: 'https://explorecourses.stanford.edu/search?q=THINK65',\n    university: 'Stanford',\n    category: ['Social Science'],\n  },\n  {\n    title: 'Applied Machine Learning',\n    number: 'CS 229A',\n    link: 'https://explorecourses.stanford.edu/search?q=CS229A',\n    university: 'Stanford',\n    category: ['Artificial Intelligence'],\n  },\n  {\n    title: 'Web Applications',\n    number: 'CS 142',\n    link: 'https://cs142.stanford.edu',\n    university: 'Stanford',\n    category: ['Product', 'Computer Systems'],\n  },\n  {\n    title: 'Probability for Computer Scientists',\n    number: 'CS 109',\n    link: 'https://cs109.stanford.edu',\n    university: 'Stanford',\n    category: ['Artificial Intelligence', 'Mathematics', 'Computer Systems'],\n  },\n  {\n    title: 'International Organizations and World Order',\n    number: 'POLISCI 10N',\n    link: 'https://explorecourses.stanford.edu/search?q=POLISCI10N',\n    university: 'Stanford',\n    category: ['Social Science'],\n  },\n  {\n    title: 'Linear Algebra and Multivariable Calculus',\n    number: 'MATH 51',\n    link: 'https://explorecourses.stanford.edu/search?q=MATH51',\n    university: 'Stanford',\n    category: ['Artificial Intelligence', 'Mathematics'],\n  },\n  {\n    title: 'Computer Organization And Systems',\n    number: 'CS 107',\n    link: 'http://cs107.stanford.edu/',\n    university: 'Stanford',\n    category: ['Computer Systems'],\n  },\n  {\n    title: 'Electricity and Magnetism',\n    number: 'PHYSICS 43',\n    link: 'https://explorecourses.stanford.edu/search?q=PHYSICS43',\n    university: 'Stanford',\n    category: ['Natural Science'],\n  },\n  {\n    title: 'Mechanics',\n    number: 'PHYSICS 41',\n    link: 'https://explorecourses.stanford.edu/search?q=PHYSICS41',\n    university: 'Stanford',\n    category: ['Natural Science'],\n  },\n];\n\nconst categoryOrdering = [\n  'Artificial Intelligence',\n  'Mathematics',\n  'Computer Systems',\n  'Social Science',\n  'Product',\n  'Natural Science',\n];\n\nexport { courses, categoryOrdering };\n","const degrees = [\n  {\n    school: 'Stanford University',\n    degrees: [\n      'M.S. Computer Science',\n      'B.S. Computer Science with Honors',\n    ],\n    link: 'https://stanford.edu',\n    icon: '/images/degrees/stanford.png',\n    years: [\n      2023,\n      2022,\n    ],\n  },\n  {\n    school: 'University of Oxford',\n    degrees: [\n      'International Development Studies',\n    ],\n    link: 'https://ox.ac.uk/',\n    icon: '/images/degrees/oxford.png',\n    years: [\n      2022,\n    ],\n  },\n];\n\nexport default degrees;\n","const positions = [\n  {\n    company: 'Google DeepMind',\n    position: 'Research Engineer',\n    icon: '/images/work/deepmind.png',\n    link: 'https://deepmind.com',\n    daterange: 'October 2024 - Present',\n    points: [\n      '- Researched and Developed an efficient training pipeline for Gemini models, significantly improving efficiency and enabling new capabilities for evaluation and simulation.',\n      '- Helping with projects such as [Gemini](https://gemini.google.com/), [Astra](https://deepmind.google/technologies/gemini/project-astra/), [Veo](https://deepmind.google/technologies/veo/), [Genie](https://deepmind.google/discover/blog/genie-2-a-large-scale-foundation-world-model/), etc.',\n    ],\n    companyType: ['Big Tech'],\n    technologiesUsed: ['AI', 'Foundation Models'],\n    timeFrame: ['Full-time'],\n  },\n  {\n    company: 'Google',\n    position: 'Research Engineer',\n    icon: '/images/work/google.png',\n    link: 'https://google.com',\n    daterange: 'September 2023 - October 2024',\n    points: [\n      '- Researched and developed on-device foundation model for the sensor modality, achieving 7-15% KPI improvement on downstream tasks (prod algos) with 30-50% less compute/memory.',\n      '- Researched and developed Advanced Running Dynamics ML algorithms featured on [Pixel](https://store.google.com/intl/en/ideas/articles/best-pixel-smartwatch-runners/) and Android devices, demonstrating 10% better performance to Apple & Garmin by third-party testing.',\n      '- Designed and implemented a modular, TPU-optimised training pipeline for motion algorithms, achieving 70-100x faster runtime than competitors. Enabled rapid hyperparameter search, resulting in the most widely adopted motion algorithm training pipeline in the Product Area.',\n    ],\n    companyType: ['Big Tech'],\n    technologiesUsed: ['AI', 'Foundation Models'],\n    timeFrame: ['Full-time'],\n  },\n  {\n    company: 'Google',\n    position: 'Student Researcher',\n    icon: '/images/work/google.png',\n    link: 'https://google.com',\n    daterange: 'January 2023 - June 2023',\n    points: [\n      '- Conducting cutting-edge research on foundational models tailored for motion-based algorithms, with a focus on optimizing on-device performance to achieve state-of-the-art results for downstream tasks.',\n      '- Investigating innovative few-shot semi-supervised sequential learning algorithms designed specifically for sensor-based data, aiming to minimize data collection requirements while attaining production-level performance benchmarks.',\n    ],\n    companyType: ['Big Tech'],\n    technologiesUsed: ['AI', 'Foundation Models'],\n    timeFrame: ['Full-time'],\n  },\n  {\n    company: 'Google',\n    position: 'Research Engineer Intern',\n    icon: '/images/work/google.png',\n    link: 'https://google.com',\n    daterange: 'June 2022 - September 2022',\n    points: [\n      '- Developing novel few-shot semi-supervised sequential learning algorithms for sensor-based data, streams for wearable devices and achieving state of the art performance with less than 50 examples',\n      '- Devising comprehensive testing mechanism to ensure real-world replicability including developing real-time WearOS / Android app, sequential error modeling, false positive testing on numerous datasets',\n      '- Working with key stakeholders to identify success metrics, leading data collection efforts, spearheading cross-team collaboration, managing tasks and expectations with senior engineers',\n    ],\n    companyType: ['Big Tech'],\n    technologiesUsed: ['AI', 'Foundation Models', 'App Dev', 'SWE'],\n    timeFrame: ['Internship'],\n  },\n  {\n    company: 'Google',\n    position: 'Research Engineer Intern',\n    icon: '/images/work/google.png',\n    link: 'https://google.com',\n    daterange: 'June 2021 - September 2021',\n    points: [\n      '- Using unsupervised techniques such as Deep Generative Models, Reinforcement Learning, and Probabilistic Graphical Models to detect and remove erroneous data from large databases at Google',\n      '- Developing a novel generative adversarial imputation network designed to detect and recommend corrections to erroneous data fields with much better results than current industry standard solutions',\n      '- Working with key stakeholders across multiple teams to understand their problems, collaborate to find a solution that addresses their key concerns, and learn key insights about development at needed scale',\n    ],\n    companyType: ['Big Tech'],\n    technologiesUsed: ['AI', 'Generative Models', 'SWE'],\n    timeFrame: ['Internship'],\n  },\n  {\n    company: 'Meta',\n    position: 'Machine Learning Intern',\n    icon: '/images/work/meta.png',\n    link: 'https://facebook.com',\n    daterange: 'June 2020 - September 2020',\n    points: [\n      '- Building Machine Learning models to predict page takeover attempts and transform the suspicion actions into requests that must be approved by a non-suspicious admin using Python, Pytorch, SQL',\n      '- Working on the page transparency initiative where we build touchpoints for users to be informed about general page information such as state-controlled media, primary admin location, page management history and suspicious updates using PHP, ReactJS, React Native, GraphQL, Relay',\n      '- Transforming the page roles surface to help admins understand and take actions on behalf of their page',\n    ],\n    companyType: ['Big Tech'],\n    technologiesUsed: ['AI', 'App Dev', 'Web Dev', 'SWE'],\n    timeFrame: ['Internship'],\n  },\n  {\n    company: 'Samsung',\n    position: 'Machine Learning Intern',\n    icon: '/images/work/samsung.png',\n    link: 'https://samsung.com',\n    daterange: 'June 2019 - September 2019',\n    points: [\n      '- Ideating an emotion detecting technology using voice features that revolutionizes voice assistant interaction and pitching to Samsung SIC executives: CTO, VP of innovation, operation, and Marketing',\n      '- Developing a deep learning algorithm with sound processing technology (Python) to allow voice assistants and chatbots in customer service to be able to interpret human emotion',\n      '- Developing an API using frameworks such as TensorFlow and Keras and filing a patent application',\n    ],\n    companyType: ['Big Tech'],\n    technologiesUsed: ['AI', 'SWE'],\n    timeFrame: ['Internship'],\n  },\n  {\n    company: 'Ample',\n    position: 'Cloud Engineering Intern',\n    icon: '/images/work/ample.png',\n    link: 'https://ample.com',\n    daterange: 'September 2020 - December 2020',\n    points: [\n      '- Building the automotive cloud infrastructureto connect cars, charging stations, and autonomous robotic devicesand using the data for efficient resource allocation, problem detection and diagnosis',\n      '- Designing and implementing the cloud infrastructure using Lambda,S3,Cloudwatch, EC2, EMR,IoT Core,Kenesis,VPC,CloudFormation,EKS, ElasticSearch,Kibana,IAM',\n    ],\n    companyType: ['Startup'],\n    technologiesUsed: ['AWS', 'SWE'],\n    timeFrame: ['Internship'],\n  },\n  {\n    company: 'SWVL',\n    position: 'Artificial Intelligence Research Intern',\n    icon: '/images/work/swvl.png',\n    link: 'https://swvl.com',\n    daterange: 'April 2020 - June 2020',\n    points: [\n      '- Combining open-source maps and company data to design and implement an efficient map architecture',\n      '- Developing a traffic overlay leveraging open-source and captain data; to estimate time of arrival using an optimized A* algorithm and to dynamically route the buses using Python, TensorFlow, OSM',\n    ],\n    companyType: ['Startup'],\n    technologiesUsed: ['AI', 'SWE'],\n    timeFrame: ['Internship'],\n  },\n  {\n    company: 'Prairie Health',\n    position: 'Deep Learning Researcher & Data Scientis',\n    icon: '/images/work/prairie_health.png',\n    link: 'https://prairiehealth.co/',\n    daterange: 'April 2020 - June 2020',\n    points: [\n      '- Developing algorithms to search for the relevant scholarly papers for a given patient (disease, comorbidities, phenotype... etc.) using NLP and machine learning, then downloading the full paper',\n      '- Developing NLPalgorithm to parse the research paper and output summaries for the Doctor (Python). This could be helpful for a patient with a rare disease or from an underrepresented group in research',\n    ],\n    companyType: ['Startup'],\n    technologiesUsed: ['AI', 'SWE'],\n    timeFrame: ['Part-time'],\n  },\n];\n\nexport default positions;\n","const research = [\n  // TODO add all research experience\n  {\n    institution: 'Stanford Artificial Intelligence Lab (SISL)',\n    position: 'Researcher',\n    icon: '/images/degrees/stanford.png',\n    link: 'https://sisl.stanford.edu/',\n    daterange: 'September 2021 - June 2023',\n    points: [\n      '- Developing a deep reinforcement learning (DRL) simulation with multiple ethical framework (Deontology, Utilitarianism, and novel dynamic morality) to codify moral theories into agent\\'s reward functions',\n      '- Working under the guidance and supervision of Professor Mykel J. Kochenderfer',\n    ],\n    companyType: ['Academia'],\n    technologiesUsed: ['AI'],\n    timeFrame: ['Part-time'],\n  },\n  {\n    institution: 'Stanford Interactive Perception and Robot Learning Lab (IPRL)',\n    position: 'Researcher',\n    icon: '/images/degrees/stanford.png',\n    link: 'https://ai.stanford.edu/',\n    daterange: 'September 2022 - June 2023',\n    points: [\n      '- Working on multiple new initiatives to improve current NeRF technology',\n      '- Working under the guidance and supervision of Professor Jeannette Bohg',\n    ],\n    companyType: ['Academia'],\n    technologiesUsed: ['AI'],\n    timeFrame: ['Part-time'],\n  },\n  {\n    institution: 'Stanford Artificial Intelligence Lab (SAIL)',\n    position: 'Undergraduate Researcher',\n    icon: '/images/degrees/stanford.png',\n    link: 'https://ai.stanford.edu/',\n    daterange: 'Decemeber 2020 - January 2022',\n    points: [\n      '- Developing AI systems (CNNs, GANs, RL, decision trees) with weak supervision to predict brick kilns across the globe thus providing granular district-level data to NGOs, nonprofits, and policy makers',\n      '- Building Infrastructure for large scale labelling project and using Amazon Mechanical Turk to label thousands of Brick Kilns',\n      '- Documenting our work and methodology for research publication in undergraduate research journal',\n      '- Working under the guidance and supervision of Professor Stefano Ermon',\n    ],\n    companyType: ['Academia'],\n    technologiesUsed: ['AI'],\n    timeFrame: ['Part-time'],\n  },\n];\n\nexport default research;\n","// TODO: Add Athletic Skills, Office Skills,\n// Data Engineering, Data Science, ML Engineering, ... ?\n\nconst skills = [\n  {\n    title: 'Bash',\n    competency: 2,\n    url: 'https://www.gnu.org/software/bash/',\n    category: ['Tools', 'Languages'],\n  },\n  {\n    title: 'Amazon Web Services (AWS)',\n    competency: 4,\n    url: 'https://aws.amazon.com/',\n    category: ['Machine Learning', 'Data Engineering', 'Web Development', 'Tools'],\n  },\n  {\n    title: 'Microsoft Azure',\n    competency: 4,\n    url: 'https://azure.microsoft.com/en-us',\n    category: ['Machine Learning', 'Data Engineering', 'Web Development', 'Tools'],\n  },\n  {\n    title: 'Google Cloud Platform (GCP)',\n    competency: 4,\n    url: 'https://cloud.google.com/',\n    category: ['Machine Learning', 'Data Engineering', 'Web Development', 'Tools'],\n  },\n  {\n    title: 'MongoDB',\n    competency: 3,\n    url: 'https://www.mongodb.com/',\n    category: ['Web Development', 'Data Engineering'],\n  },\n  {\n    title: 'SQL',\n    competency: 4,\n    url: 'https://www.microsoft.com/en-us/sql-server',\n    category: ['Web Development', 'Data Engineering', 'Languages'],\n  },\n  {\n    title: 'Git/Mercurial',\n    competency: 3,\n    url: 'https://git-scm.com/',\n    category: ['Tools'],\n  },\n  {\n    title: 'Numpy',\n    competency: 5,\n    url: 'https://numpy.org/',\n    category: ['Machine Learning', 'Data Engineering', 'Python'],\n  },\n  {\n    title: 'Tensorflow + Keras',\n    competency: 5,\n    url: 'https://www.tensorflow.org/',\n    category: ['Machine Learning', 'Python'],\n  },\n  {\n    title: 'Pytorch',\n    competency: 5,\n    url: 'https://pytorch.org/',\n    category: ['Machine Learning', 'Python'],\n  },\n  {\n    title: 'GraphQL',\n    competency: 2,\n    url: 'https://graphql.org/',\n    category: ['Web Development', 'Data Engineering'],\n  },\n  {\n    title: 'Pandas',\n    competency: 5,\n    url: 'https://pandas.pydata.org/',\n    category: ['Data Engineering', 'Machine Learning', 'Python'],\n  },\n  {\n    title: 'Matplotlib',\n    competency: 3,\n    url: 'https://matplotlib.org/',\n    category: ['Data Engineering', 'Machine Learning', 'Python'],\n  },\n  {\n    title: 'Apache Spark',\n    competency: 2,\n    url: 'https://spark.apache.org/',\n    category: ['Data Engineering', 'Machine Learning'],\n  },\n  {\n    title: 'Node.JS',\n    competency: 3,\n    url: 'https://nodejs.org/en',\n    category: ['Web Development'],\n  },\n  {\n    title: 'React.JS',\n    competency: 3,\n    url: 'https://react.dev/',\n    category: ['Web Development'],\n  },\n  {\n    title: 'React Native',\n    competency: 3,\n    url: 'https://react.dev/',\n    category: ['Web Development'],\n  },\n  {\n    title: 'HTML + CSS',\n    competency: 4,\n    url: 'https://en.wikipedia.org/wiki/HTML',\n    category: ['Web Development', 'Languages'],\n  },\n  {\n    title: 'JavaScript',\n    competency: 4,\n    url: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/',\n    category: ['Languages'],\n  },\n  {\n    title: 'Python',\n    competency: 5,\n    url: 'https://www.python.org/',\n    category: ['Languages', 'Python'],\n  },\n  {\n    title: 'C++',\n    competency: 4,\n    url: 'https://cplusplus.com/',\n    category: ['Languages'],\n  },\n  {\n    title: 'Java',\n    competency: 4,\n    url: 'https://cplusplus.com/',\n    category: ['Languages'],\n  },\n].map((skill) => ({ ...skill, category: skill.category.sort() }));\n\n// this is a list of colors that I like. The length should be == to the\n// number of categories. Re-arrange this list until you find a pattern you like.\nconst colors = [\n  '#6968b3',\n  '#37b1f5',\n  '#40494e',\n  '#515dd4',\n  '#e47272',\n  '#cc7b94',\n  '#3896e2',\n  '#c3423f',\n  '#d75858',\n  '#747fff',\n  '#64cb7b',\n];\n\nconst categories = [\n  ...new Set(skills.reduce((acc, { category }) => acc.concat(category), [])),\n]\n  .sort()\n  .map((category, index) => ({\n    name: category,\n    color: colors[index],\n  }));\n\nexport { categories, skills };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\nimport Skills from '../components/Resume/Skills';\nimport Courses from '../components/Resume/Courses';\n\nimport { courses, categoryOrdering } from '../data/resume/courses';\nimport degrees from '../data/resume/degrees';\nimport positions from '../data/resume/positions';\nimport research from '../data/resume/research';\nimport { skills, categories } from '../data/resume/skills';\n\nconst sections = [\n  'Education',\n  'Experience',\n  'Skills',\n  'Courses',\n];\n\nconst Resume = () => (\n  <Main\n    title=\"Resume\"\n    description=\"Michael Elabd's Resume. Arthena, Matroid, YC, Skeptical Investments, Stanford ICME, Planet Labs, and Facebook.\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"resume\">Resume</Link></h2>\n          <div className=\"link-container\">\n            {sections.map((sec) => (\n              <h4 key={sec}>\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n              </h4>))}\n          </div>\n        </div>\n      </header>\n      <Education data={degrees} />\n      <Experience jobs={positions} researches={research} />\n      {/* <Volunteer jobs={positions} researches={research} /> */}\n      <Skills skills={skills} categories={categories} />\n      {/* <Awards jobs={positions} researches={research} /> */}\n      <Courses courses={courses} categoryOrdering={categoryOrdering} />\n    </article>\n  </Main>\n);\n\nexport default Resume;\n"],"names":["_ref","data","_jsx","className","children","_jsxs","style","paddingBottom","display","alignItems","fontSize","paddingTop","paddingRight","src","icon","width","alt","href","link","school","degrees","map","degree","i","years","Education","id","Degree","defaultProps","height","borderRadius","company","position","daterange","points","point","Markdown","institution","handleClick","active","label","concat","type","onClick","ALL_CATEGORIES","JobExperience","jobs","researches","companyTypecategory","setCompanyTypeCategory","useState","technologiesUsedCategory","setTechnologiesUsedCategory","timeFramesCategory","setTimeFramesCategory","jobsAndResearch","companyTypes","setCompanyTypes","flatMap","job","companyType","sort","reduce","obj","key","All","technologiesUsed","setTechnologiesUsed","timeFrames","setTimeFrames","timeFrame","checkPositionFilter","includes","buttons","setButtons","setCategory","Object","keys","CategoryButton","e","prev","acc","button","getButtons","_Fragment","getWorkExperience","filteredJobs","filter","j","Job","length","getResearchExperience","filteredResearch","r","Research","Skills","Component","constructor","props","super","handleChildClick","this","setState","prevState","some","state","categories","skills","cat","name","handleProps","getRows","actCat","a","b","ret","competency","category","title","skill","url","render","Course","last","number","ARTIFICIAL_INTELLIGENCE_COURSE_TYPE","Courses","courses","categoryOrdering","courseType","setCourseType","courseTypes","setCourseTypes","aNumber","split","bNumber","courseNameA","courseNameB","courseNumberA","courseNumberB","parseInt","temp","university","course","idx","colors","Set","index","color","sections","Resume","Main","description","Link","to","sec","toLowerCase","Experience","positions","research"],"sourceRoot":""}